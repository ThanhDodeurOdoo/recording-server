namespace ws_api;

table MediaSource { // TODO pipe everything through a transport, no direct port use.
    clock_rate: uint32;
    codec: string (required);
    label: string (required);
    port: uint16;
    payload_type: uint8;
}

table MediaSources {
    audio: [MediaSource] (required);
    camera: [MediaSource] (required);
    screen: [MediaSource] (required);
}

table RecordingPayload {
    media_sources: MediaSources (required);
}

table TranscriptionPayload {
    audio_sources: [MediaSource] (required);
}

table RtcPayload { // TODO use the right types
    transport_id: string (required);
    ice_parameters: string (required);
    ice_candidates: string (required);
    dtls_parameters: string (required);
    sctp_parameters: string (required);
}


union Content {
    RecordingPayload,
    TranscriptionPayload,
    RtcPayload,
}

enum Action: byte { start_recording, start_transcript, create_rtc_transport }

table Message {
    action: Action;
    channel_uuid: string (required);
    origin: string (required);
    content: Content;
}

root_type Message;
